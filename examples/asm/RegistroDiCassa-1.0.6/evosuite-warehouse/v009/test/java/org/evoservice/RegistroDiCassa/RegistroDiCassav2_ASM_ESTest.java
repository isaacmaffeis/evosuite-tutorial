/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 28 09:59:08 GMT 2024
 */

package org.evoservice.RegistroDiCassa;

import org.junit.Test;
import static org.junit.Assert.*;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RegistroDiCassav2_ASM_ESTest extends RegistroDiCassav2_ASM_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RegistroDiCassav2_ASM registroDiCassav2_ASM0 = new RegistroDiCassav2_ASM();
      assertNotNull(registroDiCassav2_ASM0);
      assertNull(registroDiCassav2_ASM0.getAggiungiPizza());
      assertEquals(0, registroDiCassav2_ASM0.getTotale());
      assertNull(registroDiCassav2_ASM0.getSelezioneTipoDiPizza());
      assertNull(registroDiCassav2_ASM0.getServizio());
      assertEquals(RegistroDiCassav2Sig.Stati.ATTENDI_ORDINAZIONI, registroDiCassav2_ASM0.getStato());
      
      RegistroDiCassav2Sig.Servizio registroDiCassav2Sig_Servizio0 = RegistroDiCassav2Sig.Servizio.NEWORDINE;
      RegistroDiCassav2Sig.AggiungiPizza registroDiCassav2Sig_AggiungiPizza0 = RegistroDiCassav2Sig.AggiungiPizza.NO;
      RegistroDiCassav2Sig.SelezioneTipoDiPizza registroDiCassav2Sig_SelezioneTipoDiPizza0 = RegistroDiCassav2Sig.SelezioneTipoDiPizza.OTHER;
      RegistroDiCassav2Sig.AggiungiPizza registroDiCassav2Sig_AggiungiPizza1 = RegistroDiCassav2Sig.AggiungiPizza.SI;
      registroDiCassav2_ASM0.step(registroDiCassav2Sig_Servizio0, registroDiCassav2Sig_AggiungiPizza1, registroDiCassav2Sig_SelezioneTipoDiPizza0, 9, 10);
      assertFalse(registroDiCassav2Sig_AggiungiPizza1.equals((Object)registroDiCassav2Sig_AggiungiPizza0));
      assertEquals(RegistroDiCassav2Sig.AggiungiPizza.SI, registroDiCassav2_ASM0.getAggiungiPizza());
      assertEquals(RegistroDiCassav2Sig.Servizio.NEWORDINE, registroDiCassav2_ASM0.getServizio());
      assertEquals(0, registroDiCassav2_ASM0.getTotale());
      assertEquals(RegistroDiCassav2Sig.SelezioneTipoDiPizza.OTHER, registroDiCassav2_ASM0.getSelezioneTipoDiPizza());
      assertEquals(RegistroDiCassav2Sig.Stati.SCEGLI_TIPO_DI_PIZZA, registroDiCassav2_ASM0.getStato());
      assertNotSame(registroDiCassav2Sig_AggiungiPizza1, registroDiCassav2Sig_AggiungiPizza0);
      
      registroDiCassav2_ASM0.step(registroDiCassav2Sig_Servizio0, registroDiCassav2Sig_AggiungiPizza1, registroDiCassav2Sig_SelezioneTipoDiPizza0, 10, 10);
      assertFalse(registroDiCassav2Sig_AggiungiPizza1.equals((Object)registroDiCassav2Sig_AggiungiPizza0));
      assertEquals(RegistroDiCassav2Sig.Stati.ALTRAPIZZA_SELEZIONATA, registroDiCassav2_ASM0.getStato());
      assertEquals(RegistroDiCassav2Sig.AggiungiPizza.SI, registroDiCassav2_ASM0.getAggiungiPizza());
      assertEquals(RegistroDiCassav2Sig.Servizio.NEWORDINE, registroDiCassav2_ASM0.getServizio());
      assertEquals(0, registroDiCassav2_ASM0.getTotale());
      assertEquals(RegistroDiCassav2Sig.SelezioneTipoDiPizza.OTHER, registroDiCassav2_ASM0.getSelezioneTipoDiPizza());
      assertNotSame(registroDiCassav2Sig_AggiungiPizza1, registroDiCassav2Sig_AggiungiPizza0);
      
      registroDiCassav2_ASM0.step(registroDiCassav2Sig_Servizio0, registroDiCassav2Sig_AggiungiPizza0, registroDiCassav2Sig_SelezioneTipoDiPizza0, 10, 10);
      assertFalse(registroDiCassav2Sig_AggiungiPizza0.equals((Object)registroDiCassav2Sig_AggiungiPizza1));
      assertEquals(RegistroDiCassav2Sig.Servizio.NEWORDINE, registroDiCassav2_ASM0.getServizio());
      assertEquals(RegistroDiCassav2Sig.SelezioneTipoDiPizza.OTHER, registroDiCassav2_ASM0.getSelezioneTipoDiPizza());
      assertEquals(RegistroDiCassav2Sig.Stati.SCEGLI_SE_AGGIUNGERE_PIZZA, registroDiCassav2_ASM0.getStato());
      assertEquals(100, registroDiCassav2_ASM0.getTotale());
      assertEquals(RegistroDiCassav2Sig.AggiungiPizza.NO, registroDiCassav2_ASM0.getAggiungiPizza());
      assertNotSame(registroDiCassav2Sig_AggiungiPizza0, registroDiCassav2Sig_AggiungiPizza1);
      
      registroDiCassav2_ASM0.step(registroDiCassav2Sig_Servizio0, registroDiCassav2Sig_AggiungiPizza0, registroDiCassav2Sig_SelezioneTipoDiPizza0, 10, 10);
      assertFalse(registroDiCassav2Sig_AggiungiPizza0.equals((Object)registroDiCassav2Sig_AggiungiPizza1));
      assertEquals(RegistroDiCassav2Sig.Servizio.NEWORDINE, registroDiCassav2_ASM0.getServizio());
      assertEquals(RegistroDiCassav2Sig.SelezioneTipoDiPizza.OTHER, registroDiCassav2_ASM0.getSelezioneTipoDiPizza());
      assertEquals(100, registroDiCassav2_ASM0.getTotale());
      assertEquals(RegistroDiCassav2Sig.AggiungiPizza.NO, registroDiCassav2_ASM0.getAggiungiPizza());
      assertEquals(RegistroDiCassav2Sig.Stati.ATTENDI_ORDINAZIONI, registroDiCassav2_ASM0.getStato());
      assertNotSame(registroDiCassav2Sig_AggiungiPizza0, registroDiCassav2Sig_AggiungiPizza1);
      
      RegistroDiCassav2Sig.Servizio registroDiCassav2Sig_Servizio1 = RegistroDiCassav2Sig.Servizio.EXIT;
      registroDiCassav2_ASM0.step(registroDiCassav2Sig_Servizio1, registroDiCassav2Sig_AggiungiPizza0, registroDiCassav2Sig_SelezioneTipoDiPizza0, 10, 10);
      assertFalse(registroDiCassav2Sig_AggiungiPizza0.equals((Object)registroDiCassav2Sig_AggiungiPizza1));
      assertFalse(registroDiCassav2Sig_Servizio1.equals((Object)registroDiCassav2Sig_Servizio0));
      assertEquals(RegistroDiCassav2Sig.SelezioneTipoDiPizza.OTHER, registroDiCassav2_ASM0.getSelezioneTipoDiPizza());
      assertEquals(RegistroDiCassav2Sig.Servizio.EXIT, registroDiCassav2_ASM0.getServizio());
      assertEquals(100, registroDiCassav2_ASM0.getTotale());
      assertEquals(RegistroDiCassav2Sig.Stati.CHIUSO, registroDiCassav2_ASM0.getStato());
      assertEquals(RegistroDiCassav2Sig.AggiungiPizza.NO, registroDiCassav2_ASM0.getAggiungiPizza());
      assertNotSame(registroDiCassav2Sig_AggiungiPizza0, registroDiCassav2Sig_AggiungiPizza1);
      assertNotSame(registroDiCassav2Sig_Servizio1, registroDiCassav2Sig_Servizio0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RegistroDiCassav2_ASM registroDiCassav2_ASM0 = new RegistroDiCassav2_ASM();
      assertNotNull(registroDiCassav2_ASM0);
      assertNull(registroDiCassav2_ASM0.getAggiungiPizza());
      assertEquals(0, registroDiCassav2_ASM0.getTotale());
      assertNull(registroDiCassav2_ASM0.getServizio());
      assertNull(registroDiCassav2_ASM0.getSelezioneTipoDiPizza());
      assertEquals(RegistroDiCassav2Sig.Stati.ATTENDI_ORDINAZIONI, registroDiCassav2_ASM0.getStato());
      
      RegistroDiCassav2Sig.Servizio registroDiCassav2Sig_Servizio0 = RegistroDiCassav2Sig.Servizio.NEWORDINE;
      RegistroDiCassav2Sig.AggiungiPizza registroDiCassav2Sig_AggiungiPizza0 = RegistroDiCassav2Sig.AggiungiPizza.NO;
      RegistroDiCassav2Sig.SelezioneTipoDiPizza registroDiCassav2Sig_SelezioneTipoDiPizza0 = RegistroDiCassav2Sig.SelezioneTipoDiPizza.OTHER;
      registroDiCassav2_ASM0.step(registroDiCassav2Sig_Servizio0, registroDiCassav2Sig_AggiungiPizza0, registroDiCassav2Sig_SelezioneTipoDiPizza0, 10, 10);
      assertEquals(RegistroDiCassav2Sig.Servizio.NEWORDINE, registroDiCassav2_ASM0.getServizio());
      assertEquals(RegistroDiCassav2Sig.SelezioneTipoDiPizza.OTHER, registroDiCassav2_ASM0.getSelezioneTipoDiPizza());
      assertEquals(0, registroDiCassav2_ASM0.getTotale());
      assertEquals(RegistroDiCassav2Sig.AggiungiPizza.NO, registroDiCassav2_ASM0.getAggiungiPizza());
      assertEquals(RegistroDiCassav2Sig.Stati.ATTENDI_ORDINAZIONI, registroDiCassav2_ASM0.getStato());
      
      RegistroDiCassav2Sig.AggiungiPizza registroDiCassav2Sig_AggiungiPizza1 = RegistroDiCassav2Sig.AggiungiPizza.SI;
      registroDiCassav2_ASM0.step(registroDiCassav2Sig_Servizio0, registroDiCassav2Sig_AggiungiPizza1, registroDiCassav2Sig_SelezioneTipoDiPizza0, 9, 10);
      assertFalse(registroDiCassav2Sig_AggiungiPizza1.equals((Object)registroDiCassav2Sig_AggiungiPizza0));
      assertEquals(RegistroDiCassav2Sig.Servizio.NEWORDINE, registroDiCassav2_ASM0.getServizio());
      assertEquals(RegistroDiCassav2Sig.SelezioneTipoDiPizza.OTHER, registroDiCassav2_ASM0.getSelezioneTipoDiPizza());
      assertEquals(0, registroDiCassav2_ASM0.getTotale());
      assertEquals(RegistroDiCassav2Sig.AggiungiPizza.SI, registroDiCassav2_ASM0.getAggiungiPizza());
      assertEquals(RegistroDiCassav2Sig.Stati.SCEGLI_TIPO_DI_PIZZA, registroDiCassav2_ASM0.getStato());
      assertNotSame(registroDiCassav2Sig_AggiungiPizza1, registroDiCassav2Sig_AggiungiPizza0);
      
      registroDiCassav2_ASM0.step(registroDiCassav2Sig_Servizio0, registroDiCassav2Sig_AggiungiPizza1, registroDiCassav2Sig_SelezioneTipoDiPizza0, 10, 10);
      assertFalse(registroDiCassav2Sig_AggiungiPizza1.equals((Object)registroDiCassav2Sig_AggiungiPizza0));
      assertEquals(RegistroDiCassav2Sig.Stati.ALTRAPIZZA_SELEZIONATA, registroDiCassav2_ASM0.getStato());
      assertEquals(RegistroDiCassav2Sig.Servizio.NEWORDINE, registroDiCassav2_ASM0.getServizio());
      assertEquals(RegistroDiCassav2Sig.SelezioneTipoDiPizza.OTHER, registroDiCassav2_ASM0.getSelezioneTipoDiPizza());
      assertEquals(0, registroDiCassav2_ASM0.getTotale());
      assertEquals(RegistroDiCassav2Sig.AggiungiPizza.SI, registroDiCassav2_ASM0.getAggiungiPizza());
      assertNotSame(registroDiCassav2Sig_AggiungiPizza1, registroDiCassav2Sig_AggiungiPizza0);
      
      registroDiCassav2_ASM0.step(registroDiCassav2Sig_Servizio0, registroDiCassav2Sig_AggiungiPizza0, registroDiCassav2Sig_SelezioneTipoDiPizza0, 10, 10);
      assertFalse(registroDiCassav2Sig_AggiungiPizza0.equals((Object)registroDiCassav2Sig_AggiungiPizza1));
      assertEquals(RegistroDiCassav2Sig.Servizio.NEWORDINE, registroDiCassav2_ASM0.getServizio());
      assertEquals(RegistroDiCassav2Sig.SelezioneTipoDiPizza.OTHER, registroDiCassav2_ASM0.getSelezioneTipoDiPizza());
      assertEquals(RegistroDiCassav2Sig.Stati.SCEGLI_SE_AGGIUNGERE_PIZZA, registroDiCassav2_ASM0.getStato());
      assertEquals(100, registroDiCassav2_ASM0.getTotale());
      assertEquals(RegistroDiCassav2Sig.AggiungiPizza.NO, registroDiCassav2_ASM0.getAggiungiPizza());
      assertNotSame(registroDiCassav2Sig_AggiungiPizza0, registroDiCassav2Sig_AggiungiPizza1);
      
      registroDiCassav2_ASM0.step(registroDiCassav2Sig_Servizio0, registroDiCassav2Sig_AggiungiPizza0, registroDiCassav2Sig_SelezioneTipoDiPizza0, 10, 10);
      assertFalse(registroDiCassav2Sig_AggiungiPizza0.equals((Object)registroDiCassav2Sig_AggiungiPizza1));
      assertEquals(RegistroDiCassav2Sig.Servizio.NEWORDINE, registroDiCassav2_ASM0.getServizio());
      assertEquals(RegistroDiCassav2Sig.SelezioneTipoDiPizza.OTHER, registroDiCassav2_ASM0.getSelezioneTipoDiPizza());
      assertEquals(100, registroDiCassav2_ASM0.getTotale());
      assertEquals(RegistroDiCassav2Sig.AggiungiPizza.NO, registroDiCassav2_ASM0.getAggiungiPizza());
      assertEquals(RegistroDiCassav2Sig.Stati.ATTENDI_ORDINAZIONI, registroDiCassav2_ASM0.getStato());
      assertNotSame(registroDiCassav2Sig_AggiungiPizza0, registroDiCassav2Sig_AggiungiPizza1);
  }
}
