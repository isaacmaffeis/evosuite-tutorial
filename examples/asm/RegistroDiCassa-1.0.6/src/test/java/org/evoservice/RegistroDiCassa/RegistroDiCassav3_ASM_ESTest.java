/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 29 18:47:09 GMT 2024
 */

package org.evoservice.RegistroDiCassa;

import org.junit.Test;
import static org.junit.Assert.*;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RegistroDiCassav3_ASM_ESTest extends RegistroDiCassav3_ASM_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RegistroDiCassav3_ASM registroDiCassav3_ASM0 = new RegistroDiCassav3_ASM();
      assertEquals(RegistroDiCassav3Sig.Stati.ATTENDI_ORDINAZIONI, registroDiCassav3_ASM0.getStatoCassa());
      assertNull(registroDiCassav3_ASM0.getOutMess());
      assertEquals(0, registroDiCassav3_ASM0.getTotale());
      assertNotNull(registroDiCassav3_ASM0);
      
      RegistroDiCassav3Sig.Servizio registroDiCassav3Sig_Servizio0 = RegistroDiCassav3Sig.Servizio.NEWORDINE;
      RegistroDiCassav3Sig.AggiungiPizza registroDiCassav3Sig_AggiungiPizza0 = RegistroDiCassav3Sig.AggiungiPizza.SI;
      RegistroDiCassav3Sig.SelezioneTipoDiPizza registroDiCassav3Sig_SelezioneTipoDiPizza0 = RegistroDiCassav3Sig.SelezioneTipoDiPizza.STANDARD;
      registroDiCassav3_ASM0.step(registroDiCassav3Sig_Servizio0, registroDiCassav3Sig_AggiungiPizza0, registroDiCassav3Sig_SelezioneTipoDiPizza0, 2, 2, 2);
      assertEquals(RegistroDiCassav3Sig.Stati.SCEGLI_TIPO_DI_PIZZA, registroDiCassav3_ASM0.getStatoCassa());
      assertEquals(0, registroDiCassav3_ASM0.getTotale());
      assertEquals("Scegli il tipo di pizza desiderata:", registroDiCassav3_ASM0.getOutMess());
      
      registroDiCassav3_ASM0.step(registroDiCassav3Sig_Servizio0, registroDiCassav3Sig_AggiungiPizza0, registroDiCassav3Sig_SelezioneTipoDiPizza0, 2, 2, 2);
      assertEquals("Inserisci il nome di una pizza dell'elenco:", registroDiCassav3_ASM0.getOutMess());
      assertEquals(RegistroDiCassav3Sig.Stati.PIZZASTANDARD_SELEZIONATA, registroDiCassav3_ASM0.getStatoCassa());
      assertEquals(0, registroDiCassav3_ASM0.getTotale());
      
      registroDiCassav3_ASM0.step(registroDiCassav3Sig_Servizio0, registroDiCassav3Sig_AggiungiPizza0, registroDiCassav3Sig_SelezioneTipoDiPizza0, 2, 2, 2);
      assertEquals(10, registroDiCassav3_ASM0.getTotale());
      assertEquals(RegistroDiCassav3Sig.Stati.SCEGLI_SE_AGGIUNGERE_PIZZA, registroDiCassav3_ASM0.getStatoCassa());
      assertEquals("prezzo totale aggiornato", registroDiCassav3_ASM0.getOutMess());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RegistroDiCassav3_ASM registroDiCassav3_ASM0 = new RegistroDiCassav3_ASM();
      assertEquals(RegistroDiCassav3Sig.Stati.ATTENDI_ORDINAZIONI, registroDiCassav3_ASM0.getStatoCassa());
      assertNull(registroDiCassav3_ASM0.getOutMess());
      assertEquals(0, registroDiCassav3_ASM0.getTotale());
      assertNotNull(registroDiCassav3_ASM0);
      
      RegistroDiCassav3Sig.Servizio registroDiCassav3Sig_Servizio0 = RegistroDiCassav3Sig.Servizio.NEWORDINE;
      RegistroDiCassav3Sig.AggiungiPizza registroDiCassav3Sig_AggiungiPizza0 = RegistroDiCassav3Sig.AggiungiPizza.NO;
      RegistroDiCassav3Sig.SelezioneTipoDiPizza registroDiCassav3Sig_SelezioneTipoDiPizza0 = RegistroDiCassav3Sig.SelezioneTipoDiPizza.OTHER;
      registroDiCassav3_ASM0.step(registroDiCassav3Sig_Servizio0, registroDiCassav3Sig_AggiungiPizza0, registroDiCassav3Sig_SelezioneTipoDiPizza0, 2, 2, 2);
      assertEquals(RegistroDiCassav3Sig.Stati.ATTENDI_ORDINAZIONI, registroDiCassav3_ASM0.getStatoCassa());
      assertEquals("Il totale :0", registroDiCassav3_ASM0.getOutMess());
      assertEquals(0, registroDiCassav3_ASM0.getTotale());
      
      RegistroDiCassav3Sig.AggiungiPizza registroDiCassav3Sig_AggiungiPizza1 = RegistroDiCassav3Sig.AggiungiPizza.SI;
      registroDiCassav3_ASM0.step(registroDiCassav3Sig_Servizio0, registroDiCassav3Sig_AggiungiPizza1, registroDiCassav3Sig_SelezioneTipoDiPizza0, 2, 2, 5);
      assertEquals("Scegli il tipo di pizza desiderata:", registroDiCassav3_ASM0.getOutMess());
      assertEquals(RegistroDiCassav3Sig.Stati.SCEGLI_TIPO_DI_PIZZA, registroDiCassav3_ASM0.getStatoCassa());
      assertEquals(0, registroDiCassav3_ASM0.getTotale());
      assertNotSame(registroDiCassav3Sig_AggiungiPizza1, registroDiCassav3Sig_AggiungiPizza0);
      assertFalse(registroDiCassav3Sig_AggiungiPizza1.equals((Object)registroDiCassav3Sig_AggiungiPizza0));
      
      registroDiCassav3_ASM0.step(registroDiCassav3Sig_Servizio0, registroDiCassav3Sig_AggiungiPizza0, registroDiCassav3Sig_SelezioneTipoDiPizza0, 2, 2, 13);
      assertEquals("Inserisci il nome di una nuova pizza:", registroDiCassav3_ASM0.getOutMess());
      assertEquals(RegistroDiCassav3Sig.Stati.ALTRAPIZZA_SELEZIONATA, registroDiCassav3_ASM0.getStatoCassa());
      assertEquals(0, registroDiCassav3_ASM0.getTotale());
      assertNotSame(registroDiCassav3Sig_AggiungiPizza0, registroDiCassav3Sig_AggiungiPizza1);
      assertFalse(registroDiCassav3Sig_AggiungiPizza0.equals((Object)registroDiCassav3Sig_AggiungiPizza1));
      
      registroDiCassav3_ASM0.step(registroDiCassav3Sig_Servizio0, registroDiCassav3Sig_AggiungiPizza0, registroDiCassav3Sig_SelezioneTipoDiPizza0, 2, 5, 13);
      assertEquals("prezzo totale aggiornato", registroDiCassav3_ASM0.getOutMess());
      assertEquals(RegistroDiCassav3Sig.Stati.SCEGLI_SE_AGGIUNGERE_PIZZA, registroDiCassav3_ASM0.getStatoCassa());
      assertEquals(65, registroDiCassav3_ASM0.getTotale());
      assertNotSame(registroDiCassav3Sig_AggiungiPizza0, registroDiCassav3Sig_AggiungiPizza1);
      assertFalse(registroDiCassav3Sig_AggiungiPizza0.equals((Object)registroDiCassav3Sig_AggiungiPizza1));
      
      boolean boolean0 = registroDiCassav3_ASM0.isFinalState();
      assertEquals("prezzo totale aggiornato", registroDiCassav3_ASM0.getOutMess());
      assertEquals(RegistroDiCassav3Sig.Stati.SCEGLI_SE_AGGIUNGERE_PIZZA, registroDiCassav3_ASM0.getStatoCassa());
      assertEquals(65, registroDiCassav3_ASM0.getTotale());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RegistroDiCassav3_ASM registroDiCassav3_ASM0 = new RegistroDiCassav3_ASM();
      assertEquals(RegistroDiCassav3Sig.Stati.ATTENDI_ORDINAZIONI, registroDiCassav3_ASM0.getStatoCassa());
      assertNull(registroDiCassav3_ASM0.getOutMess());
      assertEquals(0, registroDiCassav3_ASM0.getTotale());
      assertNotNull(registroDiCassav3_ASM0);
      
      RegistroDiCassav3Sig.Servizio registroDiCassav3Sig_Servizio0 = RegistroDiCassav3Sig.Servizio.NEWORDINE;
      RegistroDiCassav3Sig.AggiungiPizza registroDiCassav3Sig_AggiungiPizza0 = RegistroDiCassav3Sig.AggiungiPizza.NO;
      RegistroDiCassav3Sig.SelezioneTipoDiPizza registroDiCassav3Sig_SelezioneTipoDiPizza0 = RegistroDiCassav3Sig.SelezioneTipoDiPizza.OTHER;
      RegistroDiCassav3Sig.AggiungiPizza registroDiCassav3Sig_AggiungiPizza1 = RegistroDiCassav3Sig.AggiungiPizza.SI;
      registroDiCassav3_ASM0.step(registroDiCassav3Sig_Servizio0, registroDiCassav3Sig_AggiungiPizza1, registroDiCassav3Sig_SelezioneTipoDiPizza0, 2, 2, 5);
      assertEquals(RegistroDiCassav3Sig.Stati.SCEGLI_TIPO_DI_PIZZA, registroDiCassav3_ASM0.getStatoCassa());
      assertEquals("Scegli il tipo di pizza desiderata:", registroDiCassav3_ASM0.getOutMess());
      assertEquals(0, registroDiCassav3_ASM0.getTotale());
      assertNotSame(registroDiCassav3Sig_AggiungiPizza1, registroDiCassav3Sig_AggiungiPizza0);
      assertFalse(registroDiCassav3Sig_AggiungiPizza1.equals((Object)registroDiCassav3Sig_AggiungiPizza0));
      
      registroDiCassav3_ASM0.step(registroDiCassav3Sig_Servizio0, registroDiCassav3Sig_AggiungiPizza0, registroDiCassav3Sig_SelezioneTipoDiPizza0, 2, 2, 13);
      assertEquals(RegistroDiCassav3Sig.Stati.ALTRAPIZZA_SELEZIONATA, registroDiCassav3_ASM0.getStatoCassa());
      assertEquals(0, registroDiCassav3_ASM0.getTotale());
      assertEquals("Inserisci il nome di una nuova pizza:", registroDiCassav3_ASM0.getOutMess());
      assertNotSame(registroDiCassav3Sig_AggiungiPizza0, registroDiCassav3Sig_AggiungiPizza1);
      assertFalse(registroDiCassav3Sig_AggiungiPizza0.equals((Object)registroDiCassav3Sig_AggiungiPizza1));
      
      registroDiCassav3_ASM0.step(registroDiCassav3Sig_Servizio0, registroDiCassav3Sig_AggiungiPizza0, registroDiCassav3Sig_SelezioneTipoDiPizza0, 2, 5, 13);
      assertEquals(65, registroDiCassav3_ASM0.getTotale());
      assertEquals(RegistroDiCassav3Sig.Stati.SCEGLI_SE_AGGIUNGERE_PIZZA, registroDiCassav3_ASM0.getStatoCassa());
      assertEquals("prezzo totale aggiornato", registroDiCassav3_ASM0.getOutMess());
      assertNotSame(registroDiCassav3Sig_AggiungiPizza0, registroDiCassav3Sig_AggiungiPizza1);
      assertFalse(registroDiCassav3Sig_AggiungiPizza0.equals((Object)registroDiCassav3Sig_AggiungiPizza1));
      
      registroDiCassav3_ASM0.step(registroDiCassav3Sig_Servizio0, registroDiCassav3Sig_AggiungiPizza0, registroDiCassav3Sig_SelezioneTipoDiPizza0, 2, 6, 5);
      assertEquals(RegistroDiCassav3Sig.Stati.ATTENDI_ORDINAZIONI, registroDiCassav3_ASM0.getStatoCassa());
      assertEquals(65, registroDiCassav3_ASM0.getTotale());
      assertEquals("Il totale :65", registroDiCassav3_ASM0.getOutMess());
      assertNotSame(registroDiCassav3Sig_AggiungiPizza0, registroDiCassav3Sig_AggiungiPizza1);
      assertFalse(registroDiCassav3Sig_AggiungiPizza0.equals((Object)registroDiCassav3Sig_AggiungiPizza1));
      
      RegistroDiCassav3Sig.Servizio registroDiCassav3Sig_Servizio1 = RegistroDiCassav3Sig.Servizio.EXIT;
      registroDiCassav3_ASM0.step(registroDiCassav3Sig_Servizio1, registroDiCassav3Sig_AggiungiPizza0, registroDiCassav3Sig_SelezioneTipoDiPizza0, 2, 5, 5);
      assertEquals(RegistroDiCassav3Sig.Stati.CHIUSO, registroDiCassav3_ASM0.getStatoCassa());
      assertEquals(65, registroDiCassav3_ASM0.getTotale());
      assertEquals("Registro di cassa chiuso!", registroDiCassav3_ASM0.getOutMess());
      assertNotSame(registroDiCassav3Sig_AggiungiPizza0, registroDiCassav3Sig_AggiungiPizza1);
      assertNotSame(registroDiCassav3Sig_Servizio1, registroDiCassav3Sig_Servizio0);
      assertFalse(registroDiCassav3Sig_AggiungiPizza0.equals((Object)registroDiCassav3Sig_AggiungiPizza1));
      assertFalse(registroDiCassav3Sig_Servizio1.equals((Object)registroDiCassav3Sig_Servizio0));
  }
}
