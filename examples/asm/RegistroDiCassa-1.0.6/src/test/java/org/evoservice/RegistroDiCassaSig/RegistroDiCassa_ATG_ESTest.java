/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 18 10:34:27 GMT 2025
 */

package org.evoservice.RegistroDiCassaSig;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evoservice.RegistroDiCassaSig.RegistroDiCassaSig;
import org.evoservice.RegistroDiCassaSig.RegistroDiCassa_ATG;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RegistroDiCassa_ATG_ESTest extends RegistroDiCassa_ATG_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RegistroDiCassa_ATG registroDiCassa_ATG0 = new RegistroDiCassa_ATG();
      assertEquals(RegistroDiCassaSig.Stati.ATTENDI_ORDINAZIONI, registroDiCassa_ATG0.get_statoCassa());
      assertEquals(0, (int)registroDiCassa_ATG0.get_totale());
      assertEquals("", registroDiCassa_ATG0.get_outMess());
      assertNotNull(registroDiCassa_ATG0);
      
      LinkedList<RegistroDiCassaSig.Pizza> linkedList0 = new LinkedList<RegistroDiCassaSig.Pizza>();
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      boolean boolean0 = linkedList0.add((RegistroDiCassaSig.Pizza) null);
      assertEquals(1, linkedList0.size());
      assertTrue(boolean0);
      
      RegistroDiCassaSig.Pizza.elems = (List<RegistroDiCassaSig.Pizza>) linkedList0;
      assertEquals(1, linkedList0.size());
      assertFalse(RegistroDiCassaSig.Pizza.elems.isEmpty());
      assertEquals(1, RegistroDiCassaSig.Pizza.elems.size());
      
      String string0 = registroDiCassa_ATG0.get_pizzaCorrente();
      assertEquals(RegistroDiCassaSig.Stati.ATTENDI_ORDINAZIONI, registroDiCassa_ATG0.get_statoCassa());
      assertEquals(0, (int)registroDiCassa_ATG0.get_totale());
      assertEquals("", registroDiCassa_ATG0.get_outMess());
      assertNotNull(string0);
      assertEquals("abstract_margherita", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RegistroDiCassa_ATG registroDiCassa_ATG0 = new RegistroDiCassa_ATG();
      assertEquals(0, (int)registroDiCassa_ATG0.get_totale());
      assertEquals("", registroDiCassa_ATG0.get_outMess());
      assertEquals(RegistroDiCassaSig.Stati.ATTENDI_ORDINAZIONI, registroDiCassa_ATG0.get_statoCassa());
      assertNotNull(registroDiCassa_ATG0);
      
      String string0 = registroDiCassa_ATG0.get_pizzaCorrente();
      assertEquals(0, (int)registroDiCassa_ATG0.get_totale());
      assertEquals("", registroDiCassa_ATG0.get_outMess());
      assertEquals(RegistroDiCassaSig.Stati.ATTENDI_ORDINAZIONI, registroDiCassa_ATG0.get_statoCassa());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RegistroDiCassa_ATG registroDiCassa_ATG0 = new RegistroDiCassa_ATG();
      assertEquals(RegistroDiCassaSig.Stati.ATTENDI_ORDINAZIONI, registroDiCassa_ATG0.get_statoCassa());
      assertEquals(0, (int)registroDiCassa_ATG0.get_totale());
      assertEquals("", registroDiCassa_ATG0.get_outMess());
      assertNotNull(registroDiCassa_ATG0);
      
      RegistroDiCassaSig.Servizio registroDiCassaSig_Servizio0 = RegistroDiCassaSig.Servizio.EXIT;
      registroDiCassa_ATG0.set_servizioSelezionato(registroDiCassaSig_Servizio0);
      assertEquals(RegistroDiCassaSig.Stati.ATTENDI_ORDINAZIONI, registroDiCassa_ATG0.get_statoCassa());
      assertEquals(0, (int)registroDiCassa_ATG0.get_totale());
      assertEquals("", registroDiCassa_ATG0.get_outMess());
      
      registroDiCassa_ATG0.step();
      assertEquals("Registro di cassa chiuso!", registroDiCassa_ATG0.get_outMess());
      assertEquals(0, (int)registroDiCassa_ATG0.get_totale());
      assertEquals(RegistroDiCassaSig.Stati.CHIUSO, registroDiCassa_ATG0.get_statoCassa());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RegistroDiCassa_ATG registroDiCassa_ATG0 = new RegistroDiCassa_ATG();
      assertEquals(0, (int)registroDiCassa_ATG0.get_totale());
      assertEquals(RegistroDiCassaSig.Stati.ATTENDI_ORDINAZIONI, registroDiCassa_ATG0.get_statoCassa());
      assertEquals("", registroDiCassa_ATG0.get_outMess());
      assertNotNull(registroDiCassa_ATG0);
      
      RegistroDiCassaSig.AggiungiPizza registroDiCassaSig_AggiungiPizza0 = RegistroDiCassaSig.AggiungiPizza.SI;
      registroDiCassa_ATG0.set_sceltaDiAggiuntaPizza(registroDiCassaSig_AggiungiPizza0);
      assertEquals(0, (int)registroDiCassa_ATG0.get_totale());
      assertEquals(RegistroDiCassaSig.Stati.ATTENDI_ORDINAZIONI, registroDiCassa_ATG0.get_statoCassa());
      assertEquals("", registroDiCassa_ATG0.get_outMess());
      
      RegistroDiCassaSig.Servizio registroDiCassaSig_Servizio0 = RegistroDiCassaSig.Servizio.NEWORDINE;
      registroDiCassa_ATG0.set_servizioSelezionato(registroDiCassaSig_Servizio0);
      assertEquals(0, (int)registroDiCassa_ATG0.get_totale());
      assertEquals(RegistroDiCassaSig.Stati.ATTENDI_ORDINAZIONI, registroDiCassa_ATG0.get_statoCassa());
      assertEquals("", registroDiCassa_ATG0.get_outMess());
      
      RegistroDiCassaSig.SelezioneTipoDiPizza registroDiCassaSig_SelezioneTipoDiPizza0 = RegistroDiCassaSig.SelezioneTipoDiPizza.OTHER;
      registroDiCassa_ATG0.set_sceltaDelTipoPizza(registroDiCassaSig_SelezioneTipoDiPizza0);
      assertEquals(0, (int)registroDiCassa_ATG0.get_totale());
      assertEquals(RegistroDiCassaSig.Stati.ATTENDI_ORDINAZIONI, registroDiCassa_ATG0.get_statoCassa());
      assertEquals("", registroDiCassa_ATG0.get_outMess());
      
      registroDiCassa_ATG0.step();
      assertEquals(0, (int)registroDiCassa_ATG0.get_totale());
      assertEquals("Scegli il tipo di pizza desiderata:", registroDiCassa_ATG0.get_outMess());
      assertEquals(RegistroDiCassaSig.Stati.SCEGLI_TIPO_DI_PIZZA, registroDiCassa_ATG0.get_statoCassa());
      
      registroDiCassa_ATG0.step();
      assertEquals(0, (int)registroDiCassa_ATG0.get_totale());
      assertEquals("Inserisci il nome di una nuova pizza:", registroDiCassa_ATG0.get_outMess());
      assertEquals(RegistroDiCassaSig.Stati.ALTRAPIZZA_SELEZIONATA, registroDiCassa_ATG0.get_statoCassa());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RegistroDiCassa_ATG registroDiCassa_ATG0 = new RegistroDiCassa_ATG();
      assertEquals(0, (int)registroDiCassa_ATG0.get_totale());
      assertEquals("", registroDiCassa_ATG0.get_outMess());
      assertEquals(RegistroDiCassaSig.Stati.ATTENDI_ORDINAZIONI, registroDiCassa_ATG0.get_statoCassa());
      assertNotNull(registroDiCassa_ATG0);
      
      RegistroDiCassaSig.Servizio registroDiCassaSig_Servizio0 = RegistroDiCassaSig.Servizio.NEWORDINE;
      registroDiCassa_ATG0.set_servizioSelezionato(registroDiCassaSig_Servizio0);
      assertEquals(0, (int)registroDiCassa_ATG0.get_totale());
      assertEquals("", registroDiCassa_ATG0.get_outMess());
      assertEquals(RegistroDiCassaSig.Stati.ATTENDI_ORDINAZIONI, registroDiCassa_ATG0.get_statoCassa());
      
      RegistroDiCassaSig.AggiungiPizza registroDiCassaSig_AggiungiPizza0 = RegistroDiCassaSig.AggiungiPizza.NO;
      registroDiCassa_ATG0.set_sceltaDiAggiuntaPizza(registroDiCassaSig_AggiungiPizza0);
      assertEquals(0, (int)registroDiCassa_ATG0.get_totale());
      assertEquals("", registroDiCassa_ATG0.get_outMess());
      assertEquals(RegistroDiCassaSig.Stati.ATTENDI_ORDINAZIONI, registroDiCassa_ATG0.get_statoCassa());
      
      registroDiCassa_ATG0.step();
      assertEquals("prezzo totale aggiornato", registroDiCassa_ATG0.get_outMess());
      assertEquals(0, (int)registroDiCassa_ATG0.get_totale());
      assertEquals(RegistroDiCassaSig.Stati.ATTENDI_ORDINAZIONI, registroDiCassa_ATG0.get_statoCassa());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RegistroDiCassa_ATG registroDiCassa_ATG0 = new RegistroDiCassa_ATG();
      assertEquals(RegistroDiCassaSig.Stati.ATTENDI_ORDINAZIONI, registroDiCassa_ATG0.get_statoCassa());
      assertEquals("", registroDiCassa_ATG0.get_outMess());
      assertEquals(0, (int)registroDiCassa_ATG0.get_totale());
      assertNotNull(registroDiCassa_ATG0);
      
      RegistroDiCassaSig.SelezioneTipoDiPizza registroDiCassaSig_SelezioneTipoDiPizza0 = RegistroDiCassaSig.SelezioneTipoDiPizza.STANDARD;
      registroDiCassa_ATG0.set_sceltaDelTipoPizza(registroDiCassaSig_SelezioneTipoDiPizza0);
      assertEquals(RegistroDiCassaSig.Stati.ATTENDI_ORDINAZIONI, registroDiCassa_ATG0.get_statoCassa());
      assertEquals("", registroDiCassa_ATG0.get_outMess());
      assertEquals(0, (int)registroDiCassa_ATG0.get_totale());
      
      RegistroDiCassaSig.Servizio registroDiCassaSig_Servizio0 = RegistroDiCassaSig.Servizio.NEWORDINE;
      registroDiCassa_ATG0.set_servizioSelezionato(registroDiCassaSig_Servizio0);
      assertEquals(RegistroDiCassaSig.Stati.ATTENDI_ORDINAZIONI, registroDiCassa_ATG0.get_statoCassa());
      assertEquals("", registroDiCassa_ATG0.get_outMess());
      assertEquals(0, (int)registroDiCassa_ATG0.get_totale());
      
      RegistroDiCassaSig.AggiungiPizza registroDiCassaSig_AggiungiPizza0 = RegistroDiCassaSig.AggiungiPizza.SI;
      registroDiCassa_ATG0.set_sceltaDiAggiuntaPizza(registroDiCassaSig_AggiungiPizza0);
      assertEquals(RegistroDiCassaSig.Stati.ATTENDI_ORDINAZIONI, registroDiCassa_ATG0.get_statoCassa());
      assertEquals("", registroDiCassa_ATG0.get_outMess());
      assertEquals(0, (int)registroDiCassa_ATG0.get_totale());
      
      registroDiCassa_ATG0.step();
      assertEquals("Scegli il tipo di pizza desiderata:", registroDiCassa_ATG0.get_outMess());
      assertEquals(0, (int)registroDiCassa_ATG0.get_totale());
      assertEquals(RegistroDiCassaSig.Stati.SCEGLI_TIPO_DI_PIZZA, registroDiCassa_ATG0.get_statoCassa());
      
      registroDiCassa_ATG0.step();
      assertEquals(0, (int)registroDiCassa_ATG0.get_totale());
      assertEquals(RegistroDiCassaSig.Stati.PIZZASTANDARD_SELEZIONATA, registroDiCassa_ATG0.get_statoCassa());
      assertEquals("Inserisci il nome di una pizza dell'elenco:", registroDiCassa_ATG0.get_outMess());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RegistroDiCassa_ATG registroDiCassa_ATG0 = new RegistroDiCassa_ATG();
      assertEquals(RegistroDiCassaSig.Stati.ATTENDI_ORDINAZIONI, registroDiCassa_ATG0.get_statoCassa());
      assertEquals(0, (int)registroDiCassa_ATG0.get_totale());
      assertEquals("", registroDiCassa_ATG0.get_outMess());
      assertNotNull(registroDiCassa_ATG0);
      
      registroDiCassa_ATG0.set_insertPrezzo((Integer) null);
      assertEquals(RegistroDiCassaSig.Stati.ATTENDI_ORDINAZIONI, registroDiCassa_ATG0.get_statoCassa());
      assertEquals(0, (int)registroDiCassa_ATG0.get_totale());
      assertEquals("", registroDiCassa_ATG0.get_outMess());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RegistroDiCassa_ATG registroDiCassa_ATG0 = new RegistroDiCassa_ATG();
      assertEquals(RegistroDiCassaSig.Stati.ATTENDI_ORDINAZIONI, registroDiCassa_ATG0.get_statoCassa());
      assertEquals("", registroDiCassa_ATG0.get_outMess());
      assertEquals(0, (int)registroDiCassa_ATG0.get_totale());
      assertNotNull(registroDiCassa_ATG0);
      
      registroDiCassa_ATG0.set_abstract_pizzaInserita("g~VQ2z");
      assertEquals(RegistroDiCassaSig.Stati.ATTENDI_ORDINAZIONI, registroDiCassa_ATG0.get_statoCassa());
      assertEquals("", registroDiCassa_ATG0.get_outMess());
      assertEquals(0, (int)registroDiCassa_ATG0.get_totale());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RegistroDiCassa_ATG registroDiCassa_ATG0 = new RegistroDiCassa_ATG();
      assertEquals(RegistroDiCassaSig.Stati.ATTENDI_ORDINAZIONI, registroDiCassa_ATG0.get_statoCassa());
      assertEquals("", registroDiCassa_ATG0.get_outMess());
      assertEquals(0, (int)registroDiCassa_ATG0.get_totale());
      assertNotNull(registroDiCassa_ATG0);
      
      Integer integer0 = registroDiCassa_ATG0.get_totale();
      assertEquals(RegistroDiCassaSig.Stati.ATTENDI_ORDINAZIONI, registroDiCassa_ATG0.get_statoCassa());
      assertEquals("", registroDiCassa_ATG0.get_outMess());
      assertEquals(0, (int)registroDiCassa_ATG0.get_totale());
      assertNotNull(integer0);
      assertEquals(0, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RegistroDiCassa_ATG registroDiCassa_ATG0 = new RegistroDiCassa_ATG();
      assertEquals(RegistroDiCassaSig.Stati.ATTENDI_ORDINAZIONI, registroDiCassa_ATG0.get_statoCassa());
      assertEquals("", registroDiCassa_ATG0.get_outMess());
      assertEquals(0, (int)registroDiCassa_ATG0.get_totale());
      assertNotNull(registroDiCassa_ATG0);
      
      Integer integer0 = new Integer(12);
      assertNotNull(integer0);
      assertEquals(12, (int)integer0);
      
      registroDiCassa_ATG0.set_insertQuantita(integer0);
      assertEquals(RegistroDiCassaSig.Stati.ATTENDI_ORDINAZIONI, registroDiCassa_ATG0.get_statoCassa());
      assertEquals("", registroDiCassa_ATG0.get_outMess());
      assertEquals(0, (int)registroDiCassa_ATG0.get_totale());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RegistroDiCassa_ATG registroDiCassa_ATG0 = new RegistroDiCassa_ATG();
      assertEquals(0, (int)registroDiCassa_ATG0.get_totale());
      assertEquals("", registroDiCassa_ATG0.get_outMess());
      assertEquals(RegistroDiCassaSig.Stati.ATTENDI_ORDINAZIONI, registroDiCassa_ATG0.get_statoCassa());
      assertNotNull(registroDiCassa_ATG0);
      
      registroDiCassa_ATG0.get_statoCassa();
      assertEquals(0, (int)registroDiCassa_ATG0.get_totale());
      assertEquals("", registroDiCassa_ATG0.get_outMess());
      assertEquals(RegistroDiCassaSig.Stati.ATTENDI_ORDINAZIONI, registroDiCassa_ATG0.get_statoCassa());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RegistroDiCassa_ATG registroDiCassa_ATG0 = new RegistroDiCassa_ATG();
      assertEquals(RegistroDiCassaSig.Stati.ATTENDI_ORDINAZIONI, registroDiCassa_ATG0.get_statoCassa());
      assertEquals(0, (int)registroDiCassa_ATG0.get_totale());
      assertEquals("", registroDiCassa_ATG0.get_outMess());
      assertNotNull(registroDiCassa_ATG0);
      
      String string0 = registroDiCassa_ATG0.get_outMess();
      assertEquals(RegistroDiCassaSig.Stati.ATTENDI_ORDINAZIONI, registroDiCassa_ATG0.get_statoCassa());
      assertEquals(0, (int)registroDiCassa_ATG0.get_totale());
      assertEquals("", registroDiCassa_ATG0.get_outMess());
      assertNotNull(string0);
      assertEquals("", string0);
  }
}
