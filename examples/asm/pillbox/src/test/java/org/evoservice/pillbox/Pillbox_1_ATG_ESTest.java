/*
 * This file was automatically generated by EvoSuite
 * Sun Dec 15 13:40:05 GMT 2024
 */

package org.evoservice.pillbox;

import org.junit.Test;
import static org.junit.Assert.*;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Pillbox_1_ATG_ESTest extends Pillbox_1_ATG_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Pillbox_1_ATG pillbox_1_ATG0 = new Pillbox_1_ATG();
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_logMess());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_outMess());
      assertFalse(pillbox_1_ATG0.get_requestSatisfied());
      assertFalse(pillbox_1_ATG0.get_opened());
      assertEquals(Pillbox_1.LedLights.OFF, pillbox_1_ATG0.get_redLed());
      assertEquals(0, pillbox_1_ATG0.get_time_consumption());
      assertEquals(0, pillbox_1_ATG0.get_systemTime());
      assertEquals(0, pillbox_1_ATG0.get_drawerTimer());
      assertNotNull(pillbox_1_ATG0);
      
      pillbox_1_ATG0.set_openSwitch(false);
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_logMess());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_outMess());
      assertFalse(pillbox_1_ATG0.get_requestSatisfied());
      assertFalse(pillbox_1_ATG0.get_opened());
      assertEquals(Pillbox_1.LedLights.OFF, pillbox_1_ATG0.get_redLed());
      assertEquals(0, pillbox_1_ATG0.get_time_consumption());
      assertEquals(0, pillbox_1_ATG0.get_systemTime());
      assertEquals(0, pillbox_1_ATG0.get_drawerTimer());
      
      pillbox_1_ATG0.step();
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_logMess());
      assertFalse(pillbox_1_ATG0.get_requestSatisfied());
      assertEquals(Pillbox_1.LedLights.ON, pillbox_1_ATG0.get_redLed());
      assertFalse(pillbox_1_ATG0.get_opened());
      assertEquals(0, pillbox_1_ATG0.get_time_consumption());
      assertEquals(Pillbox_1.OutMessages.TAKE_PILL, pillbox_1_ATG0.get_outMess());
      assertEquals(1, pillbox_1_ATG0.get_systemTime());
      assertEquals(0, pillbox_1_ATG0.get_drawerTimer());
      
      pillbox_1_ATG0.step();
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_logMess());
      assertFalse(pillbox_1_ATG0.get_requestSatisfied());
      assertFalse(pillbox_1_ATG0.get_opened());
      assertEquals(0, pillbox_1_ATG0.get_time_consumption());
      assertEquals(Pillbox_1.OutMessages.TAKE_PILL_IN_10_MIN, pillbox_1_ATG0.get_outMess());
      assertEquals(2, pillbox_1_ATG0.get_systemTime());
      assertEquals(1, pillbox_1_ATG0.get_drawerTimer());
      assertEquals(Pillbox_1.LedLights.BLINKING, pillbox_1_ATG0.get_redLed());
      
      pillbox_1_ATG0.step();
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_logMess());
      assertFalse(pillbox_1_ATG0.get_requestSatisfied());
      assertFalse(pillbox_1_ATG0.get_opened());
      assertEquals(0, pillbox_1_ATG0.get_time_consumption());
      assertEquals(Pillbox_1.OutMessages.TAKE_PILL_IN_10_MIN, pillbox_1_ATG0.get_outMess());
      assertEquals(1, pillbox_1_ATG0.get_drawerTimer());
      assertEquals(3, pillbox_1_ATG0.get_systemTime());
      assertEquals(Pillbox_1.LedLights.BLINKING, pillbox_1_ATG0.get_redLed());
      
      pillbox_1_ATG0.step();
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_outMess());
      assertEquals(Pillbox_1.OutMessages.PILL_MISSED, pillbox_1_ATG0.get_logMess());
      assertEquals(3, pillbox_1_ATG0.get_drawerTimer());
      assertFalse(pillbox_1_ATG0.get_opened());
      assertTrue(pillbox_1_ATG0.get_requestSatisfied());
      assertEquals(Pillbox_1.LedLights.OFF, pillbox_1_ATG0.get_redLed());
      assertEquals(0, pillbox_1_ATG0.get_time_consumption());
      assertEquals(4, pillbox_1_ATG0.get_systemTime());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Pillbox_1_ATG pillbox_1_ATG0 = new Pillbox_1_ATG();
      assertEquals(Pillbox_1.LedLights.OFF, pillbox_1_ATG0.get_redLed());
      assertFalse(pillbox_1_ATG0.get_opened());
      assertEquals(0, pillbox_1_ATG0.get_systemTime());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_outMess());
      assertEquals(0, pillbox_1_ATG0.get_drawerTimer());
      assertEquals(0, pillbox_1_ATG0.get_time_consumption());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_logMess());
      assertFalse(pillbox_1_ATG0.get_requestSatisfied());
      assertNotNull(pillbox_1_ATG0);
      
      pillbox_1_ATG0.set_openSwitch(true);
      assertEquals(Pillbox_1.LedLights.OFF, pillbox_1_ATG0.get_redLed());
      assertFalse(pillbox_1_ATG0.get_opened());
      assertEquals(0, pillbox_1_ATG0.get_systemTime());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_outMess());
      assertEquals(0, pillbox_1_ATG0.get_drawerTimer());
      assertEquals(0, pillbox_1_ATG0.get_time_consumption());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_logMess());
      assertFalse(pillbox_1_ATG0.get_requestSatisfied());
      
      pillbox_1_ATG0.step();
      assertTrue(pillbox_1_ATG0.get_opened());
      assertEquals(Pillbox_1.LedLights.ON, pillbox_1_ATG0.get_redLed());
      assertEquals(Pillbox_1.OutMessages.TAKE_PILL, pillbox_1_ATG0.get_outMess());
      assertEquals(1, pillbox_1_ATG0.get_systemTime());
      assertEquals(0, pillbox_1_ATG0.get_drawerTimer());
      assertEquals(0, pillbox_1_ATG0.get_time_consumption());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_logMess());
      assertFalse(pillbox_1_ATG0.get_requestSatisfied());
      
      pillbox_1_ATG0.step();
      assertTrue(pillbox_1_ATG0.get_opened());
      assertEquals(2, pillbox_1_ATG0.get_systemTime());
      assertEquals(Pillbox_1.LedLights.BLINKING, pillbox_1_ATG0.get_redLed());
      assertEquals(1, pillbox_1_ATG0.get_drawerTimer());
      assertEquals(Pillbox_1.OutMessages.CLOSE_DRAWER_IN_10_MIN, pillbox_1_ATG0.get_outMess());
      assertEquals(0, pillbox_1_ATG0.get_time_consumption());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_logMess());
      assertFalse(pillbox_1_ATG0.get_requestSatisfied());
      
      pillbox_1_ATG0.set_openSwitch(false);
      assertTrue(pillbox_1_ATG0.get_opened());
      assertEquals(2, pillbox_1_ATG0.get_systemTime());
      assertEquals(Pillbox_1.LedLights.BLINKING, pillbox_1_ATG0.get_redLed());
      assertEquals(1, pillbox_1_ATG0.get_drawerTimer());
      assertEquals(Pillbox_1.OutMessages.CLOSE_DRAWER_IN_10_MIN, pillbox_1_ATG0.get_outMess());
      assertEquals(0, pillbox_1_ATG0.get_time_consumption());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_logMess());
      assertFalse(pillbox_1_ATG0.get_requestSatisfied());
      
      pillbox_1_ATG0.step();
      assertEquals(Pillbox_1.LedLights.OFF, pillbox_1_ATG0.get_redLed());
      assertFalse(pillbox_1_ATG0.get_opened());
      assertTrue(pillbox_1_ATG0.get_requestSatisfied());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_outMess());
      assertEquals(3, pillbox_1_ATG0.get_systemTime());
      assertEquals(2, pillbox_1_ATG0.get_drawerTimer());
      assertEquals(0, pillbox_1_ATG0.get_time_consumption());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_logMess());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Pillbox_1_ATG pillbox_1_ATG0 = new Pillbox_1_ATG();
      assertEquals(Pillbox_1.LedLights.OFF, pillbox_1_ATG0.get_redLed());
      assertFalse(pillbox_1_ATG0.get_opened());
      assertEquals(0, pillbox_1_ATG0.get_time_consumption());
      assertEquals(0, pillbox_1_ATG0.get_drawerTimer());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_outMess());
      assertFalse(pillbox_1_ATG0.get_requestSatisfied());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_logMess());
      assertEquals(0, pillbox_1_ATG0.get_systemTime());
      assertNotNull(pillbox_1_ATG0);
      
      pillbox_1_ATG0.get_outMess();
      assertEquals(Pillbox_1.LedLights.OFF, pillbox_1_ATG0.get_redLed());
      assertFalse(pillbox_1_ATG0.get_opened());
      assertEquals(0, pillbox_1_ATG0.get_time_consumption());
      assertEquals(0, pillbox_1_ATG0.get_drawerTimer());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_outMess());
      assertFalse(pillbox_1_ATG0.get_requestSatisfied());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_logMess());
      assertEquals(0, pillbox_1_ATG0.get_systemTime());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Pillbox_1_ATG pillbox_1_ATG0 = new Pillbox_1_ATG();
      assertFalse(pillbox_1_ATG0.get_opened());
      assertEquals(Pillbox_1.LedLights.OFF, pillbox_1_ATG0.get_redLed());
      assertEquals(0, pillbox_1_ATG0.get_systemTime());
      assertFalse(pillbox_1_ATG0.get_requestSatisfied());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_logMess());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_outMess());
      assertEquals(0, pillbox_1_ATG0.get_time_consumption());
      assertEquals(0, pillbox_1_ATG0.get_drawerTimer());
      assertNotNull(pillbox_1_ATG0);
      
      int int0 = pillbox_1_ATG0.get_time_consumption();
      assertFalse(pillbox_1_ATG0.get_opened());
      assertEquals(Pillbox_1.LedLights.OFF, pillbox_1_ATG0.get_redLed());
      assertEquals(0, pillbox_1_ATG0.get_systemTime());
      assertFalse(pillbox_1_ATG0.get_requestSatisfied());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_logMess());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_outMess());
      assertEquals(0, pillbox_1_ATG0.get_time_consumption());
      assertEquals(0, pillbox_1_ATG0.get_drawerTimer());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Pillbox_1_ATG pillbox_1_ATG0 = new Pillbox_1_ATG();
      assertEquals(0, pillbox_1_ATG0.get_systemTime());
      assertFalse(pillbox_1_ATG0.get_requestSatisfied());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_logMess());
      assertFalse(pillbox_1_ATG0.get_opened());
      assertEquals(0, pillbox_1_ATG0.get_time_consumption());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_outMess());
      assertEquals(0, pillbox_1_ATG0.get_drawerTimer());
      assertEquals(Pillbox_1.LedLights.OFF, pillbox_1_ATG0.get_redLed());
      assertNotNull(pillbox_1_ATG0);
      
      int int0 = pillbox_1_ATG0.get_drawerTimer();
      assertEquals(0, pillbox_1_ATG0.get_systemTime());
      assertFalse(pillbox_1_ATG0.get_requestSatisfied());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_logMess());
      assertFalse(pillbox_1_ATG0.get_opened());
      assertEquals(0, pillbox_1_ATG0.get_time_consumption());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_outMess());
      assertEquals(0, pillbox_1_ATG0.get_drawerTimer());
      assertEquals(Pillbox_1.LedLights.OFF, pillbox_1_ATG0.get_redLed());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Pillbox_1_ATG pillbox_1_ATG0 = new Pillbox_1_ATG();
      assertEquals(0, pillbox_1_ATG0.get_systemTime());
      assertFalse(pillbox_1_ATG0.get_requestSatisfied());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_logMess());
      assertEquals(Pillbox_1.LedLights.OFF, pillbox_1_ATG0.get_redLed());
      assertFalse(pillbox_1_ATG0.get_opened());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_outMess());
      assertEquals(0, pillbox_1_ATG0.get_time_consumption());
      assertEquals(0, pillbox_1_ATG0.get_drawerTimer());
      assertNotNull(pillbox_1_ATG0);
      
      pillbox_1_ATG0.get_logMess();
      assertEquals(0, pillbox_1_ATG0.get_systemTime());
      assertFalse(pillbox_1_ATG0.get_requestSatisfied());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_logMess());
      assertEquals(Pillbox_1.LedLights.OFF, pillbox_1_ATG0.get_redLed());
      assertFalse(pillbox_1_ATG0.get_opened());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_outMess());
      assertEquals(0, pillbox_1_ATG0.get_time_consumption());
      assertEquals(0, pillbox_1_ATG0.get_drawerTimer());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Pillbox_1_ATG pillbox_1_ATG0 = new Pillbox_1_ATG();
      assertEquals(0, pillbox_1_ATG0.get_time_consumption());
      assertEquals(Pillbox_1.LedLights.OFF, pillbox_1_ATG0.get_redLed());
      assertEquals(0, pillbox_1_ATG0.get_systemTime());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_outMess());
      assertFalse(pillbox_1_ATG0.get_opened());
      assertEquals(0, pillbox_1_ATG0.get_drawerTimer());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_logMess());
      assertFalse(pillbox_1_ATG0.get_requestSatisfied());
      assertNotNull(pillbox_1_ATG0);
      
      boolean boolean0 = pillbox_1_ATG0.get_opened();
      assertEquals(0, pillbox_1_ATG0.get_time_consumption());
      assertEquals(Pillbox_1.LedLights.OFF, pillbox_1_ATG0.get_redLed());
      assertEquals(0, pillbox_1_ATG0.get_systemTime());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_outMess());
      assertFalse(pillbox_1_ATG0.get_opened());
      assertEquals(0, pillbox_1_ATG0.get_drawerTimer());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_logMess());
      assertFalse(pillbox_1_ATG0.get_requestSatisfied());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Pillbox_1_ATG pillbox_1_ATG0 = new Pillbox_1_ATG();
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_outMess());
      assertEquals(Pillbox_1.LedLights.OFF, pillbox_1_ATG0.get_redLed());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_logMess());
      assertFalse(pillbox_1_ATG0.get_requestSatisfied());
      assertEquals(0, pillbox_1_ATG0.get_time_consumption());
      assertFalse(pillbox_1_ATG0.get_opened());
      assertEquals(0, pillbox_1_ATG0.get_drawerTimer());
      assertEquals(0, pillbox_1_ATG0.get_systemTime());
      assertNotNull(pillbox_1_ATG0);
      
      int int0 = pillbox_1_ATG0.get_systemTime();
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_outMess());
      assertEquals(Pillbox_1.LedLights.OFF, pillbox_1_ATG0.get_redLed());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_logMess());
      assertFalse(pillbox_1_ATG0.get_requestSatisfied());
      assertEquals(0, pillbox_1_ATG0.get_time_consumption());
      assertFalse(pillbox_1_ATG0.get_opened());
      assertEquals(0, pillbox_1_ATG0.get_drawerTimer());
      assertEquals(0, pillbox_1_ATG0.get_systemTime());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Pillbox_1_ATG pillbox_1_ATG0 = new Pillbox_1_ATG();
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_outMess());
      assertFalse(pillbox_1_ATG0.get_requestSatisfied());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_logMess());
      assertEquals(0, pillbox_1_ATG0.get_systemTime());
      assertEquals(0, pillbox_1_ATG0.get_drawerTimer());
      assertFalse(pillbox_1_ATG0.get_opened());
      assertEquals(Pillbox_1.LedLights.OFF, pillbox_1_ATG0.get_redLed());
      assertEquals(0, pillbox_1_ATG0.get_time_consumption());
      assertNotNull(pillbox_1_ATG0);
      
      pillbox_1_ATG0.get_redLed();
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_outMess());
      assertFalse(pillbox_1_ATG0.get_requestSatisfied());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_logMess());
      assertEquals(0, pillbox_1_ATG0.get_systemTime());
      assertEquals(0, pillbox_1_ATG0.get_drawerTimer());
      assertFalse(pillbox_1_ATG0.get_opened());
      assertEquals(Pillbox_1.LedLights.OFF, pillbox_1_ATG0.get_redLed());
      assertEquals(0, pillbox_1_ATG0.get_time_consumption());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Pillbox_1_ATG pillbox_1_ATG0 = new Pillbox_1_ATG();
      assertEquals(Pillbox_1.LedLights.OFF, pillbox_1_ATG0.get_redLed());
      assertFalse(pillbox_1_ATG0.get_opened());
      assertEquals(0, pillbox_1_ATG0.get_time_consumption());
      assertEquals(0, pillbox_1_ATG0.get_drawerTimer());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_outMess());
      assertFalse(pillbox_1_ATG0.get_requestSatisfied());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_logMess());
      assertEquals(0, pillbox_1_ATG0.get_systemTime());
      assertNotNull(pillbox_1_ATG0);
      
      pillbox_1_ATG0.set_openSwitch(false);
      assertEquals(Pillbox_1.LedLights.OFF, pillbox_1_ATG0.get_redLed());
      assertFalse(pillbox_1_ATG0.get_opened());
      assertEquals(0, pillbox_1_ATG0.get_time_consumption());
      assertEquals(0, pillbox_1_ATG0.get_drawerTimer());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_outMess());
      assertFalse(pillbox_1_ATG0.get_requestSatisfied());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_logMess());
      assertEquals(0, pillbox_1_ATG0.get_systemTime());
      
      pillbox_1_ATG0.step();
      assertFalse(pillbox_1_ATG0.get_opened());
      assertEquals(Pillbox_1.OutMessages.TAKE_PILL, pillbox_1_ATG0.get_outMess());
      assertEquals(0, pillbox_1_ATG0.get_time_consumption());
      assertEquals(0, pillbox_1_ATG0.get_drawerTimer());
      assertFalse(pillbox_1_ATG0.get_requestSatisfied());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_logMess());
      assertEquals(1, pillbox_1_ATG0.get_systemTime());
      assertEquals(Pillbox_1.LedLights.ON, pillbox_1_ATG0.get_redLed());
      
      pillbox_1_ATG0.set_openSwitch(true);
      assertFalse(pillbox_1_ATG0.get_opened());
      assertEquals(Pillbox_1.OutMessages.TAKE_PILL, pillbox_1_ATG0.get_outMess());
      assertEquals(0, pillbox_1_ATG0.get_time_consumption());
      assertEquals(0, pillbox_1_ATG0.get_drawerTimer());
      assertFalse(pillbox_1_ATG0.get_requestSatisfied());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_logMess());
      assertEquals(1, pillbox_1_ATG0.get_systemTime());
      assertEquals(Pillbox_1.LedLights.ON, pillbox_1_ATG0.get_redLed());
      
      pillbox_1_ATG0.step();
      assertEquals(1, pillbox_1_ATG0.get_drawerTimer());
      assertEquals(0, pillbox_1_ATG0.get_time_consumption());
      assertEquals(Pillbox_1.LedLights.BLINKING, pillbox_1_ATG0.get_redLed());
      assertFalse(pillbox_1_ATG0.get_requestSatisfied());
      assertEquals(2, pillbox_1_ATG0.get_systemTime());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_logMess());
      assertEquals(Pillbox_1.OutMessages.CLOSE_DRAWER_IN_10_MIN, pillbox_1_ATG0.get_outMess());
      assertTrue(pillbox_1_ATG0.get_opened());
      
      pillbox_1_ATG0.step();
      assertEquals(1, pillbox_1_ATG0.get_drawerTimer());
      assertEquals(0, pillbox_1_ATG0.get_time_consumption());
      assertEquals(Pillbox_1.LedLights.BLINKING, pillbox_1_ATG0.get_redLed());
      assertFalse(pillbox_1_ATG0.get_requestSatisfied());
      assertEquals(3, pillbox_1_ATG0.get_systemTime());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_logMess());
      assertEquals(Pillbox_1.OutMessages.CLOSE_DRAWER_IN_10_MIN, pillbox_1_ATG0.get_outMess());
      assertTrue(pillbox_1_ATG0.get_opened());
      
      pillbox_1_ATG0.step();
      assertEquals(Pillbox_1.LedLights.OFF, pillbox_1_ATG0.get_redLed());
      assertTrue(pillbox_1_ATG0.get_requestSatisfied());
      assertEquals(0, pillbox_1_ATG0.get_time_consumption());
      assertEquals(Pillbox_1.OutMessages.DRAWER_NOT_CLOSED, pillbox_1_ATG0.get_logMess());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_outMess());
      assertEquals(4, pillbox_1_ATG0.get_systemTime());
      assertEquals(3, pillbox_1_ATG0.get_drawerTimer());
      assertTrue(pillbox_1_ATG0.get_opened());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Pillbox_1_ATG pillbox_1_ATG0 = new Pillbox_1_ATG();
      assertFalse(pillbox_1_ATG0.get_requestSatisfied());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_logMess());
      assertFalse(pillbox_1_ATG0.get_opened());
      assertEquals(0, pillbox_1_ATG0.get_time_consumption());
      assertEquals(Pillbox_1.LedLights.OFF, pillbox_1_ATG0.get_redLed());
      assertEquals(0, pillbox_1_ATG0.get_systemTime());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_outMess());
      assertEquals(0, pillbox_1_ATG0.get_drawerTimer());
      assertNotNull(pillbox_1_ATG0);
      
      boolean boolean0 = pillbox_1_ATG0.get_requestSatisfied();
      assertFalse(pillbox_1_ATG0.get_requestSatisfied());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_logMess());
      assertFalse(pillbox_1_ATG0.get_opened());
      assertEquals(0, pillbox_1_ATG0.get_time_consumption());
      assertEquals(Pillbox_1.LedLights.OFF, pillbox_1_ATG0.get_redLed());
      assertEquals(0, pillbox_1_ATG0.get_systemTime());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_outMess());
      assertEquals(0, pillbox_1_ATG0.get_drawerTimer());
      assertFalse(boolean0);
  }
}
