/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 12 12:04:14 GMT 2024
 */

package org.evoservice.wrapper;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evoservice.wrapper.ATM3v2Sig;
import org.evoservice.wrapper.ATM3v2_ASM;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ATM3v2_ASM_ESTest extends ATM3v2_ASM_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ATM3v2_ASM aTM3v2_ASM0 = new ATM3v2_ASM();
      assertEquals(ATM3v2Sig.State.AWAITCARD, aTM3v2_ASM0.get_atmState());
      assertEquals(1000, aTM3v2_ASM0.get_moneyLeft());
      assertEquals(0, aTM3v2_ASM0.get_numOfBalanceChecks());
      assertNotNull(aTM3v2_ASM0);
      
      aTM3v2_ASM0.set_insertMoneySizeStandard(138);
      assertEquals(ATM3v2Sig.State.AWAITCARD, aTM3v2_ASM0.get_atmState());
      assertEquals(1000, aTM3v2_ASM0.get_moneyLeft());
      assertEquals(0, aTM3v2_ASM0.get_numOfBalanceChecks());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ATM3v2_ASM aTM3v2_ASM0 = new ATM3v2_ASM();
      assertEquals(ATM3v2Sig.State.AWAITCARD, aTM3v2_ASM0.get_atmState());
      assertEquals(1000, aTM3v2_ASM0.get_moneyLeft());
      assertEquals(0, aTM3v2_ASM0.get_numOfBalanceChecks());
      assertNotNull(aTM3v2_ASM0);
      
      // Undeclared exception!
      try { 
        aTM3v2_ASM0.step();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evoservice.wrapper.ATM3v2", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ATM3v2_ASM aTM3v2_ASM0 = new ATM3v2_ASM();
      assertEquals(0, aTM3v2_ASM0.get_numOfBalanceChecks());
      assertEquals(ATM3v2Sig.State.AWAITCARD, aTM3v2_ASM0.get_atmState());
      assertEquals(1000, aTM3v2_ASM0.get_moneyLeft());
      assertNotNull(aTM3v2_ASM0);
      
      ATM3v2Sig.MoneySizeSelection aTM3v2Sig_MoneySizeSelection0 = ATM3v2Sig.MoneySizeSelection.OTHER;
      aTM3v2_ASM0.set_standardOrOther(aTM3v2Sig_MoneySizeSelection0);
      assertEquals(0, aTM3v2_ASM0.get_numOfBalanceChecks());
      assertEquals(ATM3v2Sig.State.AWAITCARD, aTM3v2_ASM0.get_atmState());
      assertEquals(1000, aTM3v2_ASM0.get_moneyLeft());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ATM3v2_ASM aTM3v2_ASM0 = new ATM3v2_ASM();
      assertEquals(0, aTM3v2_ASM0.get_numOfBalanceChecks());
      assertEquals(1000, aTM3v2_ASM0.get_moneyLeft());
      assertEquals(ATM3v2Sig.State.AWAITCARD, aTM3v2_ASM0.get_atmState());
      assertNotNull(aTM3v2_ASM0);
      
      int int0 = aTM3v2_ASM0.get_numOfBalanceChecks();
      assertEquals(0, int0);
      assertEquals(0, aTM3v2_ASM0.get_numOfBalanceChecks());
      assertEquals(1000, aTM3v2_ASM0.get_moneyLeft());
      assertEquals(ATM3v2Sig.State.AWAITCARD, aTM3v2_ASM0.get_atmState());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ATM3v2_ASM aTM3v2_ASM0 = new ATM3v2_ASM();
      assertEquals(1000, aTM3v2_ASM0.get_moneyLeft());
      assertEquals(0, aTM3v2_ASM0.get_numOfBalanceChecks());
      assertEquals(ATM3v2Sig.State.AWAITCARD, aTM3v2_ASM0.get_atmState());
      assertNotNull(aTM3v2_ASM0);
      
      boolean boolean0 = aTM3v2_ASM0.get_accessible_card3();
      assertTrue(boolean0);
      assertEquals(1000, aTM3v2_ASM0.get_moneyLeft());
      assertEquals(0, aTM3v2_ASM0.get_numOfBalanceChecks());
      assertEquals(ATM3v2Sig.State.AWAITCARD, aTM3v2_ASM0.get_atmState());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ATM3v2_ASM aTM3v2_ASM0 = new ATM3v2_ASM();
      assertEquals(0, aTM3v2_ASM0.get_numOfBalanceChecks());
      assertEquals(1000, aTM3v2_ASM0.get_moneyLeft());
      assertEquals(ATM3v2Sig.State.AWAITCARD, aTM3v2_ASM0.get_atmState());
      assertNotNull(aTM3v2_ASM0);
      
      boolean boolean0 = aTM3v2_ASM0.get_accessible_card2();
      assertTrue(boolean0);
      assertEquals(0, aTM3v2_ASM0.get_numOfBalanceChecks());
      assertEquals(1000, aTM3v2_ASM0.get_moneyLeft());
      assertEquals(ATM3v2Sig.State.AWAITCARD, aTM3v2_ASM0.get_atmState());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ATM3v2_ASM aTM3v2_ASM0 = new ATM3v2_ASM();
      assertEquals(1000, aTM3v2_ASM0.get_moneyLeft());
      assertEquals(ATM3v2Sig.State.AWAITCARD, aTM3v2_ASM0.get_atmState());
      assertEquals(0, aTM3v2_ASM0.get_numOfBalanceChecks());
      assertNotNull(aTM3v2_ASM0);
      
      boolean boolean0 = aTM3v2_ASM0.get_accessible_card1();
      assertTrue(boolean0);
      assertEquals(1000, aTM3v2_ASM0.get_moneyLeft());
      assertEquals(ATM3v2Sig.State.AWAITCARD, aTM3v2_ASM0.get_atmState());
      assertEquals(0, aTM3v2_ASM0.get_numOfBalanceChecks());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ATM3v2_ASM aTM3v2_ASM0 = new ATM3v2_ASM();
      assertEquals(0, aTM3v2_ASM0.get_numOfBalanceChecks());
      assertEquals(1000, aTM3v2_ASM0.get_moneyLeft());
      assertEquals(ATM3v2Sig.State.AWAITCARD, aTM3v2_ASM0.get_atmState());
      assertNotNull(aTM3v2_ASM0);
      
      aTM3v2_ASM0.set_insertedPin(1652);
      assertEquals(0, aTM3v2_ASM0.get_numOfBalanceChecks());
      assertEquals(1000, aTM3v2_ASM0.get_moneyLeft());
      assertEquals(ATM3v2Sig.State.AWAITCARD, aTM3v2_ASM0.get_atmState());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ATM3v2_ASM aTM3v2_ASM0 = new ATM3v2_ASM();
      assertEquals(0, aTM3v2_ASM0.get_numOfBalanceChecks());
      assertEquals(1000, aTM3v2_ASM0.get_moneyLeft());
      assertEquals(ATM3v2Sig.State.AWAITCARD, aTM3v2_ASM0.get_atmState());
      assertNotNull(aTM3v2_ASM0);
      
      int int0 = aTM3v2_ASM0.get_moneyLeft();
      assertEquals(1000, int0);
      assertEquals(0, aTM3v2_ASM0.get_numOfBalanceChecks());
      assertEquals(1000, aTM3v2_ASM0.get_moneyLeft());
      assertEquals(ATM3v2Sig.State.AWAITCARD, aTM3v2_ASM0.get_atmState());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ATM3v2_ASM aTM3v2_ASM0 = new ATM3v2_ASM();
      assertEquals(1000, aTM3v2_ASM0.get_moneyLeft());
      assertEquals(0, aTM3v2_ASM0.get_numOfBalanceChecks());
      assertEquals(ATM3v2Sig.State.AWAITCARD, aTM3v2_ASM0.get_atmState());
      assertNotNull(aTM3v2_ASM0);
      
      int int0 = aTM3v2_ASM0.get_balance_card1();
      assertEquals(3000, int0);
      assertEquals(1000, aTM3v2_ASM0.get_moneyLeft());
      assertEquals(0, aTM3v2_ASM0.get_numOfBalanceChecks());
      assertEquals(ATM3v2Sig.State.AWAITCARD, aTM3v2_ASM0.get_atmState());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ATM3v2_ASM aTM3v2_ASM0 = new ATM3v2_ASM();
      assertEquals(ATM3v2Sig.State.AWAITCARD, aTM3v2_ASM0.get_atmState());
      assertEquals(1000, aTM3v2_ASM0.get_moneyLeft());
      assertEquals(0, aTM3v2_ASM0.get_numOfBalanceChecks());
      assertNotNull(aTM3v2_ASM0);
      
      aTM3v2_ASM0.set_insertMoneySizeOther(1878);
      assertEquals(ATM3v2Sig.State.AWAITCARD, aTM3v2_ASM0.get_atmState());
      assertEquals(1000, aTM3v2_ASM0.get_moneyLeft());
      assertEquals(0, aTM3v2_ASM0.get_numOfBalanceChecks());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ATM3v2_ASM aTM3v2_ASM0 = new ATM3v2_ASM();
      assertEquals(1000, aTM3v2_ASM0.get_moneyLeft());
      assertEquals(0, aTM3v2_ASM0.get_numOfBalanceChecks());
      assertEquals(ATM3v2Sig.State.AWAITCARD, aTM3v2_ASM0.get_atmState());
      assertNotNull(aTM3v2_ASM0);
      
      aTM3v2_ASM0.get_atmState();
      assertEquals(1000, aTM3v2_ASM0.get_moneyLeft());
      assertEquals(0, aTM3v2_ASM0.get_numOfBalanceChecks());
      assertEquals(ATM3v2Sig.State.AWAITCARD, aTM3v2_ASM0.get_atmState());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ATM3v2_ASM aTM3v2_ASM0 = new ATM3v2_ASM();
      assertEquals(0, aTM3v2_ASM0.get_numOfBalanceChecks());
      assertEquals(ATM3v2Sig.State.AWAITCARD, aTM3v2_ASM0.get_atmState());
      assertEquals(1000, aTM3v2_ASM0.get_moneyLeft());
      assertNotNull(aTM3v2_ASM0);
      
      int int0 = aTM3v2_ASM0.get_balance_card2();
      assertEquals(1652, int0);
      assertEquals(0, aTM3v2_ASM0.get_numOfBalanceChecks());
      assertEquals(ATM3v2Sig.State.AWAITCARD, aTM3v2_ASM0.get_atmState());
      assertEquals(1000, aTM3v2_ASM0.get_moneyLeft());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ATM3v2_ASM aTM3v2_ASM0 = new ATM3v2_ASM();
      assertEquals(1000, aTM3v2_ASM0.get_moneyLeft());
      assertEquals(0, aTM3v2_ASM0.get_numOfBalanceChecks());
      assertEquals(ATM3v2Sig.State.AWAITCARD, aTM3v2_ASM0.get_atmState());
      assertNotNull(aTM3v2_ASM0);
      
      int int0 = aTM3v2_ASM0.get_balance_card3();
      assertEquals(548, int0);
      assertEquals(1000, aTM3v2_ASM0.get_moneyLeft());
      assertEquals(0, aTM3v2_ASM0.get_numOfBalanceChecks());
      assertEquals(ATM3v2Sig.State.AWAITCARD, aTM3v2_ASM0.get_atmState());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ATM3v2_ASM aTM3v2_ASM0 = new ATM3v2_ASM();
      assertEquals(ATM3v2Sig.State.AWAITCARD, aTM3v2_ASM0.get_atmState());
      assertEquals(1000, aTM3v2_ASM0.get_moneyLeft());
      assertEquals(0, aTM3v2_ASM0.get_numOfBalanceChecks());
      assertNotNull(aTM3v2_ASM0);
      
      ATM3v2Sig.Service aTM3v2Sig_Service0 = ATM3v2Sig.Service.EXIT;
      aTM3v2_ASM0.set_selectedService(aTM3v2Sig_Service0);
      assertEquals(ATM3v2Sig.State.AWAITCARD, aTM3v2_ASM0.get_atmState());
      assertEquals(1000, aTM3v2_ASM0.get_moneyLeft());
      assertEquals(0, aTM3v2_ASM0.get_numOfBalanceChecks());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ATM3v2_ASM aTM3v2_ASM0 = new ATM3v2_ASM();
      assertEquals(ATM3v2Sig.State.AWAITCARD, aTM3v2_ASM0.get_atmState());
      assertEquals(1000, aTM3v2_ASM0.get_moneyLeft());
      assertEquals(0, aTM3v2_ASM0.get_numOfBalanceChecks());
      assertNotNull(aTM3v2_ASM0);
      
      aTM3v2_ASM0.set_insertedCard("card2");
      assertEquals(ATM3v2Sig.State.AWAITCARD, aTM3v2_ASM0.get_atmState());
      assertEquals(1000, aTM3v2_ASM0.get_moneyLeft());
      assertEquals(0, aTM3v2_ASM0.get_numOfBalanceChecks());
      
      aTM3v2_ASM0.step();
      assertEquals(ATM3v2Sig.State.AWAITPIN, aTM3v2_ASM0.get_atmState());
      assertEquals(1000, aTM3v2_ASM0.get_moneyLeft());
      assertEquals(0, aTM3v2_ASM0.get_numOfBalanceChecks());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ATM3v2_ASM aTM3v2_ASM0 = new ATM3v2_ASM();
      assertEquals(ATM3v2Sig.State.AWAITCARD, aTM3v2_ASM0.get_atmState());
      assertEquals(1000, aTM3v2_ASM0.get_moneyLeft());
      assertEquals(0, aTM3v2_ASM0.get_numOfBalanceChecks());
      assertNotNull(aTM3v2_ASM0);
      
      ATM3v2Sig.NumCard aTM3v2Sig_NumCard0 = aTM3v2_ASM0.get_currCard();
      assertEquals(ATM3v2Sig.State.AWAITCARD, aTM3v2_ASM0.get_atmState());
      assertEquals(1000, aTM3v2_ASM0.get_moneyLeft());
      assertEquals(0, aTM3v2_ASM0.get_numOfBalanceChecks());
      assertNull(aTM3v2Sig_NumCard0);
  }
}
