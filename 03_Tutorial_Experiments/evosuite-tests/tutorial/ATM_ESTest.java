/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 06 21:39:53 GMT 2024
 */

package tutorial;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import tutorial.ATM;
import tutorial.ATMCard;
import tutorial.Bank;
import tutorial.Company;
import tutorial.CurrentAccount;
import tutorial.Owner;
import tutorial.SavingsAccount;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ATM_ESTest extends ATM_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Bank bank0 = new Bank();
      ATM aTM0 = new ATM(bank0);
      SavingsAccount savingsAccount0 = new SavingsAccount((Owner) null);
      bank0.addAccount(savingsAccount0);
      int[] intArray0 = new int[4];
      Company company0 = new Company("CARD_INSERTED");
      CurrentAccount currentAccount0 = new CurrentAccount(company0, 2617);
      ATMCard aTMCard0 = new ATMCard(company0, currentAccount0, intArray0);
      aTMCard0.setAccount(savingsAccount0);
      aTM0.insertCard(aTMCard0);
      savingsAccount0.deposit(2919);
      aTM0.enterPin(intArray0);
      aTM0.withdraw(1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Bank bank0 = new Bank();
      ATM aTM0 = new ATM(bank0);
      aTM0.withdraw(1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Bank bank0 = new Bank();
      ATM aTM0 = new ATM(bank0);
      SavingsAccount savingsAccount0 = new SavingsAccount((Owner) null);
      bank0.addAccount(savingsAccount0);
      int[] intArray0 = new int[23];
      ATMCard aTMCard0 = new ATMCard((Owner) null, savingsAccount0, intArray0);
      aTM0.insertCard(aTMCard0);
      aTM0.enterPin(intArray0);
      aTM0.deposit((-25));
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Bank bank0 = new Bank();
      ATM aTM0 = new ATM(bank0);
      aTM0.deposit((-1));
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Bank bank0 = new Bank();
      ATM aTM0 = new ATM(bank0);
      int[] intArray0 = new int[7];
      Company company0 = new Company("AUTHORIZED");
      SavingsAccount savingsAccount0 = new SavingsAccount(company0);
      intArray0[0] = 2;
      bank0.addAccount(savingsAccount0);
      int[] intArray1 = new int[7];
      ATMCard aTMCard0 = new ATMCard(company0, savingsAccount0, intArray1);
      aTM0.insertCard(aTMCard0);
      aTM0.enterPin(intArray0);
      assertArrayEquals(new int[] {2, 0, 0, 0, 0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Bank bank0 = new Bank();
      ATM aTM0 = new ATM(bank0);
      SavingsAccount savingsAccount0 = new SavingsAccount((Owner) null);
      bank0.addAccount(savingsAccount0);
      int[] intArray0 = new int[4];
      Company company0 = new Company("CARD_INSERTED");
      CurrentAccount currentAccount0 = new CurrentAccount(company0, 2617);
      ATMCard aTMCard0 = new ATMCard(company0, currentAccount0, intArray0);
      aTMCard0.setAccount(savingsAccount0);
      aTM0.insertCard(aTMCard0);
      int[] intArray1 = new int[1];
      aTM0.enterPin(intArray1);
      assertEquals(1, intArray1.length);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Bank bank0 = new Bank();
      ATM aTM0 = new ATM(bank0);
      int[] intArray0 = new int[4];
      aTM0.enterPin(intArray0);
      assertEquals(4, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Bank bank0 = new Bank();
      ATM aTM0 = new ATM(bank0);
      SavingsAccount savingsAccount0 = new SavingsAccount((Owner) null);
      bank0.addAccount(savingsAccount0);
      int[] intArray0 = new int[4];
      Company company0 = new Company("CARD_INSERTED");
      CurrentAccount currentAccount0 = new CurrentAccount(company0, 2617);
      ATMCard aTMCard0 = new ATMCard(company0, currentAccount0, intArray0);
      aTMCard0.setAccount(savingsAccount0);
      aTM0.insertCard(aTMCard0);
      aTM0.enterPin(intArray0);
      aTM0.withdraw(1);
      aTM0.insertCard(aTMCard0);
      assertFalse(aTMCard0.isEnabled());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Bank bank0 = new Bank();
      ATM aTM0 = new ATM(bank0);
      SavingsAccount savingsAccount0 = new SavingsAccount((Owner) null);
      int[] intArray0 = new int[23];
      ATMCard aTMCard0 = new ATMCard((Owner) null, savingsAccount0, intArray0);
      aTM0.insertCard(aTMCard0);
      assertTrue(aTMCard0.isEnabled());
  }
}
